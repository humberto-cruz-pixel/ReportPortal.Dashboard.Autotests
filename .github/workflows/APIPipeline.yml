name: API tests

on:
  schedule:
    - cron: '0 12 * * *'
  push:
    branches: [ '009-SonarQube' ]
  pull_request:
    branches: [ '009-SonarQube' ]

jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Restore dependencies API Tests
        run: dotnet restore "C:\Windows\System32\actions-runner\_work\ReportPortal.Dashboard.Autotests\ReportPortal.Dashboard.Autotests\ReportPortal.ATM\APITests\APITests.csproj"
        shell: cmd
        
      - name: Build API Test project
        run: dotnet build --no-restore "C:\Windows\System32\actions-runner\_work\ReportPortal.Dashboard.Autotests\ReportPortal.Dashboard.Autotests\ReportPortal.ATM\APITests\APITests.csproj"
        shell: cmd
  
  test:
    needs: build
    runs-on: self-hosted
    steps:
      - name: Test API
        run: dotnet test "C:\Windows\System32\actions-runner\_work\ReportPortal.Dashboard.Autotests\ReportPortal.Dashboard.Autotests\ReportPortal.ATM\APITests\APITests.csproj" --logger "trx;LogFileName=test-results.trx"
        shell: cmd
        env:
          API_TOKEN: ${{ secrets.API_TOKEN }}
      
  Authenticate:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      token: ${{ steps.generate-token.outputs.token }}
    steps:
      - name: Generate a token
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.CICD_REPORTER_APP_ID }}
          private-key: ${{ secrets.CICD_REPORTER_APP_KEY }}
  
  Publish_Results:
    needs: Authenticate
    runs-on: self-hosted
    steps:
      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: Test Results
          path: C:\Windows\System32\actions-runner\_work\ReportPortal.Dashboard.Autotests\ReportPortal.Dashboard.Autotests\ReportPortal.ATM\APITests\TestResults\test-results.trx

      - name: Publish Test Report
        uses: dorny/test-reporter@v1
        if: always()
        with:
          artifact: 'Test Results'
          name: 'API Tests'
          path: '*.trx'
          reporter: 'dotnet-trx'
          token: needs.Authenticate.outputs.token

  Send_Notification:
    if: always()
    needs: Publish_Results
    name: Send Notification
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Test Results for ${{ github.workflow }}
        uses: skitionek/notify-microsoft-teams@master
        if: always()
        with:
          webhook_url: ${{ secrets.TEAMS_INCOMING_WEBHOOK_URL_1 }}
          needs: ${{ toJson(needs) }}
          job: ${{ toJson(job) }}
          steps: ${{ toJson(steps) }}
